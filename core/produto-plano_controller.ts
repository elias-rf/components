import { planoDb } from '@/data/plano/plano.db.js'
import type { TSchema } from '@/schemas/schema.type.js'
import { TAdapterKnex } from '@/utils/orm/adapter-knex.js'
import { ormTable } from '@/utils/orm/index.js'

export const CadPro: TSchema = {
  table: 'CadPro',
  primary: ['CdProduto'] as const,
  relations: {
    fornecedor: {
      method: () =>
        import('./fornecedor_controller.js').then(
          (m) => m.fornecedorController.fornecedor_read
        ),
      where: [['CdFornecedor', 'CdFornecedor']],
    },
  },
  fields: [
    'AcresFinanc',
    'AliqIrrf',
    'CkTabela',
    'Correcao',
    'CustoContabil',
    'CustoEmb',
    'CustoFinanc',
    'CustoFrete',
    'Desc1',
    'Desc2',
    'Desc3',
    'Desc4',
    'Desc5',
    'Desc6',
    'DescontoSubstituicao',
    'DifICMS',
    'DtUltPedido',
    'DtUltVenda',
    'FgComposto',
    'FgControlaSerie',
    'FgEtiquetaBalanca',
    'Fragmentada',
    'MedidaNovo',
    'MestreGrade',
    'ObsComplementar',
    'PercAumentoFab',
    'PercComissaoPrazo',
    'PercComissaoVista',
    'PercFrete',
    'PercIpiFab',
    'PesoBruto',
    'PesoLiq',
    'Pis_Cofins',
    'PrecoAtacadoAnt',
    'PrecoVendaAnt',
    'QtdadeUltCompra',
    'ReceitaEtiqueta',
    'Servico',
    'TipoEtiqueta',
    'TipoValidadeEtiqueta',
    'TotVendaMes',
    'UltCusto',
    'ValidadeEtiqueta',
    'VlTabela',
    'ConversaoMedida',
    'Classificacao',
    'DtFinalPromAtacado',
    'DtFinalPromVarejo',
    'DtInicialPromAtacado',
    'DtInicialPromVarejo',
    'DtUltAlteracao',
    'FgKit',
    'ImprimeComponentes',
    'MargemSubstituicao',
    'TipoTributacao',
    'VlAtacado',
    'VlPromocaoAtacado',
    'VlPromocaoVarejo',
    'CdInterno',
    'CdRefEstoque',
    'CdReferencia',
    'DescontoA',
    'DescontoB',
    'DescontoC',
    'DescontoD',
    'DescontoE',
    'DescontoFidelidade',
    'Observacao',
    'CdProduto',
    'CdDepartamento',
    'CdFornecedor',
    'DtCadastro',
    'VlCusto',
    'VlVenda',
    'VlVendaAnt',
    'FgAtivo',
    'FgEstoque',
    'SitBal',
    'PercLucro',
    'DtPromocao',
    'CdCategoria',
    'Fracionamento',
    'NomeDoSal',
    'FgPsico',
    'CdDCB',
    'CdFabricante',
    'Area',
    'Espessura',
    'Largura',
    'Comprimento',
    'CdGrupo',
    'CdSubGrupo',
    'DptoEtiqueta',
    'Classificacao10147',
    'FgMoedaEspecifica',
    'FgLoteControlado',
    'FgBancoHoras',
    'FgManipulado',
    'FgPrecoTabelado',
    'DescricaoDCB',
    'UnidadePesagem',
    'FgEmbalagem',
    'CapaprodutoPlano',
    'FgDescVendedorDireto',
    'PercDescMaxGerente',
    'PercDescMaxVendedor',
    'FgComplementoVenda',
    'CdMarca',
    'FgPercLimite',
    'DescMaxPermitido',
    'CdProdutoNumerico',
    'DtUltCompra',
    'VlUltCompra',
    'PoliticaPreco',
    'PercRedCusto',
    'FgQtdeFixa',
    'CustoAlternativo',
    'Cdmoeda',
    'Equivalencia',
    'FgProdFinal',
    'VlManipulacao',
    'FgQsp',
    'MedidaAdicional',
    'VlAdicional',
    'MedidaPadrao',
    'Descricao',
    'Complemento',
    'FgPrecoFabrica',
    'CriterioReposicao',
    'PercDescVista',
    'PercDescPrazo',
    'MultiplicadorManipulacao',
    'VlUltCusto',
    'DtUltAlteracaoVlTabela',
    'DtUltAlteracaoVlCusto',
    'DtUltAlteracaoVlVenda',
    'DtUltAlteracaoVlAtacado',
    'TipoReposicao',
    'UnidadeProdutiva',
    'CdClasseTerapeutica',
    'DescontoEspecial',
    'PercDescExtra',
    'PontosMilhagem',
    'CdMoedaCustoMedio',
    'Abreviatura',
    'DoseMinima',
    'DoseMaxima',
    'FgCapsula',
    'CdSal',
    'PontosMilhagemDebito',
    'FgRegistro74',
    'PercMaximo',
    'FgVMSCard',
    'DescontoFidelizacao',
    'FgUsoContinuo',
    'PosologiaDia',
    'Unidade',
    'TipoReceita',
    'NumUltLote',
    'FgBloqueioCompra',
    'CodiGONCM',
    'FgCompraCentralizada',
    'PercComissaoVarejoVista',
    'PercComissaoAtacadoVista',
    'PercComissaoVarejoPrazo',
    'PercComissaoAtacadoPrazo',
    'VlPrecoAnvisa',
    'AliqRedBaseST',
    'FgEstatistica',
    'VlCustoBase',
    'IAT',
    'IPPT',
    'CdServico',
    'CodigoEX',
    'TipoMercadoria',
    'GeneroProduto',
    'IndicadorPropriedade',
    'ClassificacaoFiscal',
    'OrigemProduto',
    'FgPesavel',
    'PercLucroVarejo',
    'PercLucroAtacado',
    'ControleNum',
    'CNPJProdutor',
    'QtdeUnidadesVenda',
    'FgOcultaSelecaoRapida',
    'QuantidadeEmbalagem',
    'FgValidadeIndeterminada',
    'CEST',
    'CNatOpe',
    'NaturezaReceita',
    'FgIndProdEscalaRelevante',
    'QtdeVendaAtacado',
    'CdProdutoMestre',
    'DescontoF',
    'DescontoG',
    'DescontoH',
    'DescontoI',
    'DescontoJ',
    'FgCombo',
    'IdWeb',
  ] as const,
}

export type TProdutoPlanoFields = (typeof CadPro.fields)[number]
export type TProdutoPlanoKeys = (typeof CadPro.primary)[number]

function produtoPlanoControllerFactory(db: TAdapterKnex, schema: TSchema) {
  const orm = ormTable<TProdutoPlanoFields, TProdutoPlanoKeys>(db, schema)
  return {
    produtoPlano_list: orm.rpc.list,
    produtoPlano_read: orm.rpc.read,
    produtoPlano_count: orm.rpc.count,
    produtoPlano_update: orm.rpc.update,
    produtoPlano_create: orm.rpc.create,
    produtoPlano_del: orm.rpc.del,
    produtoPlano_increment: orm.rpc.increment,
  }
}

export const produtoPlanoController = produtoPlanoControllerFactory(
  planoDb,
  CadPro
)
