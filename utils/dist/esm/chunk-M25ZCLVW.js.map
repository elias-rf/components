{
  "version": 3,
  "sources": ["../../src/knex.ts"],
  "sourcesContent": ["export function knexMock(response: any, error?: any) {\n  let called = 0;\n  let calledStack: any[] = [];\n  let mockStack: any[] = [];\n\n  const k = {\n    select: (...args: any) => {\n      mockStack.push({ select: args });\n      return k;\n    },\n    sum: (...args: any) => {\n      mockStack.push({ sum: args });\n      return k;\n    },\n    limit: (...args: any) => {\n      mockStack.push({ limit: args });\n      return k;\n    },\n    distinct: (...args: any) => {\n      mockStack.push({ distinct: args });\n      return k;\n    },\n    join: (...args: any) => {\n      mockStack.push({ join: args });\n      return k;\n    },\n    returning: (...args: any) => {\n      mockStack.push({ returning: args });\n      return k;\n    },\n    raw: (...args: any) => {\n      mockStack.push({ raw: args });\n      return k;\n    },\n    groupBy: (...args: any) => {\n      mockStack.push({ groupBy: args });\n      return k;\n    },\n    groupByRaw: (...args: any) => {\n      mockStack.push({ groupByRaw: args });\n      return k;\n    },\n    orderByRaw: (...args: any) => {\n      mockStack.push({ orderByRaw: args });\n      return k;\n    },\n    orderBy: (...args: any) => {\n      mockStack.push({ orderBy: args });\n      return k;\n    },\n    from: (...args: any) => {\n      mockStack.push({ from: args });\n      return k;\n    },\n    havingRaw: (...args: any) => {\n      mockStack.push({ havingRaw: args });\n      return k;\n    },\n    where: (...args: any) => {\n      if (typeof args[0] === \"function\") {\n        mockStack.push({ where: [\"Function\"] });\n      } else {\n        mockStack.push({ where: args });\n      }\n      return k;\n    },\n    whereRaw: (...args: any) => {\n      mockStack.push({ whereRaw: args });\n      return k;\n    },\n    whereNull: (...args: any) => {\n      mockStack.push({ whereNull: args });\n      return k;\n    },\n    whereBetween: (...args: any) => {\n      mockStack.push({ whereBetween: args });\n      return k;\n    },\n    whereIn: (...args: any) => {\n      mockStack.push({ whereIn: args });\n      return k;\n    },\n    andWhere: (...args: any) => {\n      mockStack.push({ andWhere: args });\n      return k;\n    },\n    update: (...args: any) => {\n      mockStack.push({ update: args });\n      return k;\n    },\n    insert: (...args: any) => {\n      mockStack.push({ insert: args });\n      return k;\n    },\n    del: (...args: any) => {\n      mockStack.push({ del: args });\n      return k;\n    },\n    then: (resolve: (resp: any) => any, reject: (resp: any) => any) => {\n      calledStack.push(mockStack);\n      const tmp = [...mockStack];\n      mockStack = [];\n      called++;\n      if (Array.isArray(response)) {\n        if (resolve) {\n          return Promise.resolve(resolve(response[called - 1]));\n        } else {\n          reject(error);\n        }\n      } else {\n        return resolve(response(tmp));\n      }\n    },\n  };\n\n  const knex = (table?: any) => {\n    if (table) mockStack.push({ knex: table });\n    return k;\n  };\n\n  knex.raw = (args: any) => {\n    mockStack.push({ raw: args });\n    return k;\n  };\n  knex.mock = {\n    stack: calledStack,\n    clear: () => {\n      calledStack = [];\n      mockStack = [];\n    },\n  };\n\n  return knex;\n}\n"],
  "mappings": "AAAO,SAASA,EAASC,EAAeC,EAAa,CACnD,IAAIC,EAAS,EACTC,EAAqB,CAAC,EACtBC,EAAmB,CAAC,EAElBC,EAAI,CACR,OAAQ,IAAIC,KACVF,EAAU,KAAK,CAAE,OAAQE,CAAK,CAAC,EACxBD,GAET,IAAK,IAAIC,KACPF,EAAU,KAAK,CAAE,IAAKE,CAAK,CAAC,EACrBD,GAET,MAAO,IAAIC,KACTF,EAAU,KAAK,CAAE,MAAOE,CAAK,CAAC,EACvBD,GAET,SAAU,IAAIC,KACZF,EAAU,KAAK,CAAE,SAAUE,CAAK,CAAC,EAC1BD,GAET,KAAM,IAAIC,KACRF,EAAU,KAAK,CAAE,KAAME,CAAK,CAAC,EACtBD,GAET,UAAW,IAAIC,KACbF,EAAU,KAAK,CAAE,UAAWE,CAAK,CAAC,EAC3BD,GAET,IAAK,IAAIC,KACPF,EAAU,KAAK,CAAE,IAAKE,CAAK,CAAC,EACrBD,GAET,QAAS,IAAIC,KACXF,EAAU,KAAK,CAAE,QAASE,CAAK,CAAC,EACzBD,GAET,WAAY,IAAIC,KACdF,EAAU,KAAK,CAAE,WAAYE,CAAK,CAAC,EAC5BD,GAET,WAAY,IAAIC,KACdF,EAAU,KAAK,CAAE,WAAYE,CAAK,CAAC,EAC5BD,GAET,QAAS,IAAIC,KACXF,EAAU,KAAK,CAAE,QAASE,CAAK,CAAC,EACzBD,GAET,KAAM,IAAIC,KACRF,EAAU,KAAK,CAAE,KAAME,CAAK,CAAC,EACtBD,GAET,UAAW,IAAIC,KACbF,EAAU,KAAK,CAAE,UAAWE,CAAK,CAAC,EAC3BD,GAET,MAAO,IAAIC,KACL,OAAOA,EAAK,IAAO,WACrBF,EAAU,KAAK,CAAE,MAAO,CAAC,UAAU,CAAE,CAAC,EAEtCA,EAAU,KAAK,CAAE,MAAOE,CAAK,CAAC,EAEzBD,GAET,SAAU,IAAIC,KACZF,EAAU,KAAK,CAAE,SAAUE,CAAK,CAAC,EAC1BD,GAET,UAAW,IAAIC,KACbF,EAAU,KAAK,CAAE,UAAWE,CAAK,CAAC,EAC3BD,GAET,aAAc,IAAIC,KAChBF,EAAU,KAAK,CAAE,aAAcE,CAAK,CAAC,EAC9BD,GAET,QAAS,IAAIC,KACXF,EAAU,KAAK,CAAE,QAASE,CAAK,CAAC,EACzBD,GAET,SAAU,IAAIC,KACZF,EAAU,KAAK,CAAE,SAAUE,CAAK,CAAC,EAC1BD,GAET,OAAQ,IAAIC,KACVF,EAAU,KAAK,CAAE,OAAQE,CAAK,CAAC,EACxBD,GAET,OAAQ,IAAIC,KACVF,EAAU,KAAK,CAAE,OAAQE,CAAK,CAAC,EACxBD,GAET,IAAK,IAAIC,KACPF,EAAU,KAAK,CAAE,IAAKE,CAAK,CAAC,EACrBD,GAET,KAAM,CAACE,EAA6BC,IAA+B,CACjEL,EAAY,KAAKC,CAAS,EAC1B,IAAMK,EAAM,CAAC,GAAGL,CAAS,EAGzB,GAFAA,EAAY,CAAC,EACbF,IACI,MAAM,QAAQF,CAAQ,EAAG,CAC3B,GAAIO,EACF,OAAO,QAAQ,QAAQA,EAAQP,EAASE,EAAS,EAAE,CAAC,EAEpDM,EAAOP,CAAK,CAEhB,KACE,QAAOM,EAAQP,EAASS,CAAG,CAAC,CAEhC,CACF,EAEMC,EAAQC,IACRA,GAAOP,EAAU,KAAK,CAAE,KAAMO,CAAM,CAAC,EAClCN,GAGT,OAAAK,EAAK,IAAOJ,IACVF,EAAU,KAAK,CAAE,IAAKE,CAAK,CAAC,EACrBD,GAETK,EAAK,KAAO,CACV,MAAOP,EACP,MAAO,IAAM,CACXA,EAAc,CAAC,EACfC,EAAY,CAAC,CACf,CACF,EAEOM,CACT",
  "names": ["knexMock", "response", "error", "called", "calledStack", "mockStack", "k", "args", "resolve", "reject", "tmp", "knex", "table"]
}
