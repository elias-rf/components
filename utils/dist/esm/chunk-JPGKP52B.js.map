{
  "version": 3,
  "sources": ["../../../node_modules/quick-lru/index.js", "../../src/memoize.ts"],
  "sourcesContent": ["export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n", "import QuickLRU from \"quick-lru\";\nimport { hashObject } from \"./hash-object\";\n\nexport const memoizeCache = new QuickLRU({ maxSize: 500 });\n\nconst CINCO_MINUTOS = 5 * 60 * 1000;\n\nexport function memoize(callback: any, maxAge: number = CINCO_MINUTOS) {\n  function memoized(...args: any) {\n    const hash = callback.name + hashObject(args);\n    console.log(hash, memoizeCache.has(hash));\n    if (memoizeCache.has(hash)) {\n      console.log(`\uD83D\uDFE2 CACHED ${hash}`);\n      return memoizeCache.get(hash);\n    }\n    console.log(`\uD83D\uDD34 MISSED ${hash}`);\n    const rsp = callback(...args);\n    memoizeCache.set(hash, rsp, { maxAge });\n    return rsp;\n  }\n  return memoized;\n}\n"],
  "mappings": "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",
  "names": ["QuickLRU", "options", "cache", "key", "item", "value", "maxAge", "expiry", "deleted", "newSize", "items", "removeCount", "i", "oldCacheSize", "callbackFunction", "thisArgument", "memoizeCache", "QuickLRU", "CINCO_MINUTOS", "memoize", "callback", "maxAge", "memoized", "args", "hash", "hashObject", "rsp"]
}
