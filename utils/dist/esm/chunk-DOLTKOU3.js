function o({request:e,responseType:t="json"}){let s={headers:e.headers||{},method:e.method||"GET"};if(s.method!=="GET"&&(s.body=e.body||null),e.query){let n=Object.keys(e.query).map(a=>{let d=`${encodeURIComponent(a)}=`;return Array.isArray(e.query[a])?d+=e.query[a].join(`&${encodeURIComponent(a)}=`):typeof e.query[a]=="object"?d+=encodeURIComponent(JSON.stringify(e.query[a])):d+=encodeURIComponent(e.query[a]),d}).join("&");e.url+=`?${n}`}return fetch(e.url,s).then(n=>{switch(t){case"json":return n.json();case"blob":return n.blob();case"text":return n.text();default:return n}})}var i={baseUrl:"",headers:{},RESPONSE_TYPES:{json:"json",blob:"blob",text:"text",raw:"raw"},formRequestQuery({method:e="GET",url:t,headers:r,query:s}){let n=t.indexOf("http")>-1||t.indexOf("www")>-1?t:`${this.baseUrl||""}${t}`;return{method:e,url:n,headers:Object.assign({},this.headers,r),query:s}},formRequestData({method:e,url:t,headers:r,data:s}){let n=t.indexOf("http")>-1||t.indexOf("www")>-1?t:`${this.baseUrl||""}${t}`;return{method:e,url:n,body:JSON.stringify(s),headers:Object.assign({},{Accept:"application/json","Content-Type":"application/json"},this.headers,r)}},formPostRequest({url:e,headers:t,data:r}){let s=e.indexOf("http")>-1||e.indexOf("www")>-1?e:`${this.baseUrl||""}${e}`;return{method:"POST",url:s,body:r,headers:Object.assign({},this.headers,t)}},setBaseUrl(e){this.baseUrl=e},setHeaders(e){this.headers={},typeof e=="object"&&(this.headers=e)},get({url:e,headers:t,query:r,responseType:s}){let n=this.formRequestQuery({url:e,headers:t,query:r});return o({request:n,responseType:s})},put({url:e,data:t,headers:r,responseType:s}){let n=this.formRequestData({method:"PUT",url:e,headers:r,data:t});return o({request:n,responseType:s})},patch({url:e,data:t,headers:r,responseType:s}){let n=this.formRequestData({method:"PATCH",url:e,headers:r,data:t});return o({request:n,responseType:s})},post({url:e,data:t,headers:r,responseType:s}){let n=this.formRequestData({method:"POST",url:e,headers:r,data:t});return o({request:n,responseType:s})},postForm({url:e,data:t,headers:r}){let s=this.formPostRequest({url:e,data:t,headers:r});return o({request:s})},delete({url:e,headers:t,query:r}){let s=this.formRequestQuery({method:"DELETE",url:e,headers:t,query:r});return o({request:s})}},h=i,y=i.RESPONSE_TYPES;export{h as a,y as b};
//# sourceMappingURL=chunk-DOLTKOU3.js.map
