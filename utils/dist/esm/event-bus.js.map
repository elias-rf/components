{
  "version": 3,
  "sources": ["../../src/event-bus.ts"],
  "sourcesContent": ["type EventKey = string | symbol | \"*\";\ntype EventHandler<T = any> = (payload: T) => void;\ntype EventMap = Record<EventKey, EventHandler>;\ntype Bus<E> = Record<keyof E, E[keyof E][]>;\n\ninterface EventBus<T extends EventMap> {\n  on<Key extends keyof T>(key: Key, handler: T[Key]): () => void;\n  off<Key extends keyof T>(key: Key, handler: T[Key]): void;\n  once<Key extends keyof T>(key: Key, handler: T[Key]): void;\n  emit<Key extends keyof T>(key: Key, ...payload: Parameters<T[Key]>): void;\n}\n\ninterface EventBusConfig {\n  onError: (...params: any[]) => void;\n}\n\nexport function eventBus<E extends EventMap>(\n  config?: EventBusConfig\n): EventBus<E> {\n  const bus: Partial<Bus<E>> = {};\n\n  const on: EventBus<E>[\"on\"] = (key, handler) => {\n    if (bus[key] === undefined) {\n      bus[key] = [];\n    }\n    bus[key]?.push(handler);\n\n    return () => {\n      off(key, handler);\n    };\n  };\n\n  const off: EventBus<E>[\"off\"] = (key, handler) => {\n    const index = bus[key]?.indexOf(handler) ?? -1;\n    bus[key]?.splice(index >>> 0, 1);\n\n    if (key !== \"*\") {\n      off<any>(\"*\", handler);\n    }\n  };\n\n  const once: EventBus<E>[\"once\"] = (key, handler) => {\n    const handleOnce = (payload: Parameters<typeof handler>) => {\n      handler(payload);\n      // TODO: find out a better way to type `handleOnce`\n      off<any>(key, handleOnce as typeof handler);\n    };\n\n    on(key, handleOnce as typeof handler);\n  };\n\n  const emit: EventBus<E>[\"emit\"] = (key, payload) => {\n    bus[key]?.forEach((fn) => {\n      try {\n        fn(payload);\n      } catch (e) {\n        config?.onError(e);\n      }\n    });\n\n    if (key !== \"*\") {\n      /* @ts-ignore payload desconhecido */\n      emit<any>(\"*\", payload);\n    }\n  };\n\n  return { on, off, once, emit };\n}\n"],
  "mappings": "4BAgBO,SAASA,EACdC,EACa,CACb,IAAMC,EAAuB,CAAC,EAExBC,EAAwB,CAACC,EAAKC,KAC9BH,EAAIE,KAAS,SACfF,EAAIE,GAAO,CAAC,GAEdF,EAAIE,IAAM,KAAKC,CAAO,EAEf,IAAM,CACXC,EAAIF,EAAKC,CAAO,CAClB,GAGIC,EAA0B,CAACF,EAAKC,IAAY,CAChD,IAAME,EAAQL,EAAIE,IAAM,QAAQC,CAAO,GAAK,GAC5CH,EAAIE,IAAM,OAAOG,IAAU,EAAG,CAAC,EAE3BH,IAAQ,KACVE,EAAS,IAAKD,CAAO,CAEzB,EAEMG,EAA4B,CAACJ,EAAKC,IAAY,CAClD,IAAMI,EAAcC,GAAwC,CAC1DL,EAAQK,CAAO,EAEfJ,EAASF,EAAKK,CAA4B,CAC5C,EAEAN,EAAGC,EAAKK,CAA4B,CACtC,EAEME,EAA4B,CAACP,EAAKM,IAAY,CAClDR,EAAIE,IAAM,QAASQ,GAAO,CACxB,GAAI,CACFA,EAAGF,CAAO,CACZ,OAASG,EAAP,CACAZ,GAAQ,QAAQY,CAAC,CACnB,CACF,CAAC,EAEGT,IAAQ,KAEVO,EAAU,IAAKD,CAAO,CAE1B,EAEA,MAAO,CAAE,GAAAP,EAAI,IAAAG,EAAK,KAAAE,EAAM,KAAAG,CAAK,CAC/B",
  "names": ["eventBus", "config", "bus", "on", "key", "handler", "off", "index", "once", "handleOnce", "payload", "emit", "fn", "e"]
}
