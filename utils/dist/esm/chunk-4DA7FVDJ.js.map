{
  "version": 3,
  "sources": ["../../src/fetch-mock-rpc.ts"],
  "sourcesContent": ["const map = new Map();\nlet history_: any[] = [];\n\nexport const fetchMockRpc = {\n  mock(matcher: string, response: any) {\n    response.status = response.status || 200;\n    if (map.has(matcher)) map.delete(matcher);\n    map.set(matcher, response);\n  },\n  history(index?: number) {\n    if (index !== undefined) return history_[index];\n    return history_;\n  },\n  map() {\n    return JSON.stringify(Object.fromEntries(map), null, 2);\n  },\n  reset() {\n    map.clear();\n    history_ = [];\n  },\n  fetch(url: any, options?: any): Promise<any> {\n    history_.push({ url, options });\n    let _status = 200;\n    let _rsp: any = \"\";\n    if (options && options.body) {\n      const body = JSON.parse(options.body);\n\n      if (!map.has(body.method)) {\n        return Promise.reject(`${body.method} n\u00E3o encontrado`);\n      }\n      _rsp = map.get(body.method).body;\n      _rsp.jsonrpc = \"2.0\";\n      _rsp.id = body.id || \"\";\n      _rsp.method = body.method;\n    }\n    return Promise.resolve({\n      json: () => {\n        return Promise.resolve(_rsp);\n      },\n      status: _status,\n    });\n  },\n};\n"],
  "mappings": "AAAA,IAAMA,EAAM,IAAI,IACZC,EAAkB,CAAC,EAEVC,EAAe,CAC1B,KAAKC,EAAiBC,EAAe,CACnCA,EAAS,OAASA,EAAS,QAAU,IACjCJ,EAAI,IAAIG,CAAO,GAAGH,EAAI,OAAOG,CAAO,EACxCH,EAAI,IAAIG,EAASC,CAAQ,CAC3B,EACA,QAAQC,EAAgB,CACtB,OAAIA,IAAU,OAAkBJ,EAASI,GAClCJ,CACT,EACA,KAAM,CACJ,OAAO,KAAK,UAAU,OAAO,YAAYD,CAAG,EAAG,KAAM,CAAC,CACxD,EACA,OAAQ,CACNA,EAAI,MAAM,EACVC,EAAW,CAAC,CACd,EACA,MAAMK,EAAUC,EAA6B,CAC3CN,EAAS,KAAK,CAAE,IAAAK,EAAK,QAAAC,CAAQ,CAAC,EAC9B,IAAIC,EAAU,IACVC,EAAY,GAChB,GAAIF,GAAWA,EAAQ,KAAM,CAC3B,IAAMG,EAAO,KAAK,MAAMH,EAAQ,IAAI,EAEpC,GAAI,CAACP,EAAI,IAAIU,EAAK,MAAM,EACtB,OAAO,QAAQ,OAAO,GAAGA,EAAK,0BAAuB,EAEvDD,EAAOT,EAAI,IAAIU,EAAK,MAAM,EAAE,KAC5BD,EAAK,QAAU,MACfA,EAAK,GAAKC,EAAK,IAAM,GACrBD,EAAK,OAASC,EAAK,MACrB,CACA,OAAO,QAAQ,QAAQ,CACrB,KAAM,IACG,QAAQ,QAAQD,CAAI,EAE7B,OAAQD,CACV,CAAC,CACH,CACF",
  "names": ["map", "history_", "fetchMockRpc", "matcher", "response", "index", "url", "options", "_status", "_rsp", "body"]
}
