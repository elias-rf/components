function i(u,h){let y=0,t=[],e=[],n={select:(...r)=>(e.push({select:r}),n),sum:(...r)=>(e.push({sum:r}),n),limit:(...r)=>(e.push({limit:r}),n),distinct:(...r)=>(e.push({distinct:r}),n),join:(...r)=>(e.push({join:r}),n),returning:(...r)=>(e.push({returning:r}),n),raw:(...r)=>(e.push({raw:r}),n),groupBy:(...r)=>(e.push({groupBy:r}),n),groupByRaw:(...r)=>(e.push({groupByRaw:r}),n),orderByRaw:(...r)=>(e.push({orderByRaw:r}),n),orderBy:(...r)=>(e.push({orderBy:r}),n),from:(...r)=>(e.push({from:r}),n),havingRaw:(...r)=>(e.push({havingRaw:r}),n),where:(...r)=>(typeof r[0]=="function"?e.push({where:["Function"]}):e.push({where:r}),n),whereRaw:(...r)=>(e.push({whereRaw:r}),n),whereNull:(...r)=>(e.push({whereNull:r}),n),whereBetween:(...r)=>(e.push({whereBetween:r}),n),whereIn:(...r)=>(e.push({whereIn:r}),n),andWhere:(...r)=>(e.push({andWhere:r}),n),update:(...r)=>(e.push({update:r}),n),insert:(...r)=>(e.push({insert:r}),n),del:(...r)=>(e.push({del:r}),n),then:(r,s)=>{t.push(e);let p=[...e];if(e=[],y++,Array.isArray(u)){if(r)return Promise.resolve(r(u[y-1]));s(h)}else return r(u(p))}},a=r=>(r&&e.push({knex:r}),n);return a.raw=r=>(e.push({raw:r}),n),a.mock={stack:t,clear:()=>{t=[],e=[]}},a}export{i as a};
//# sourceMappingURL=chunk-M25ZCLVW.js.map
