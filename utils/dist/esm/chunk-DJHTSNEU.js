import{z as a}from"zod";function n(e,r=" | "){return e.map(o=>typeof o=="string"?`'${o}'`:o).join(r)}function d(e){throw new Error}var i=(e,r)=>{let o;switch(e.code){case a.ZodIssueCode.invalid_type:e.received===a.ZodParsedType.undefined?o="Requerido":o=`Esperado ${e.expected}, recebido ${e.received}`;break;case a.ZodIssueCode.invalid_literal:o=`Valor literal inv\xE1lido, esperado ${JSON.stringify(e.expected)}`;break;case a.ZodIssueCode.unrecognized_keys:o=`Chave(s) n\xE3o conhecida(s) no objeto: ${n(e.keys,", ")}`;break;case a.ZodIssueCode.invalid_union:o="Entrada Inv\xE1lida";break;case a.ZodIssueCode.invalid_union_discriminator:o=`Valor discriminador inv\xE1lido. Esperado ${n(e.options)}`;break;case a.ZodIssueCode.invalid_enum_value:o=`Valor enum inv\xE1lido. Esperado ${n(e.options)}, recebido '${e.received}'`;break;case a.ZodIssueCode.invalid_arguments:o="Argumentos da fun\xE7\xE3o inv\xE1lidos";break;case a.ZodIssueCode.invalid_return_type:o="Retorno da fun\xE7\xE3o com tipo inv\xE1lido";break;case a.ZodIssueCode.invalid_date:o="Data inv\xE1lida";break;case a.ZodIssueCode.invalid_string:e.validation!=="regex"?o=`Inv\xE1lido ${e.validation}`:o="Inv\xE1lido";break;case a.ZodIssueCode.too_small:e.type==="array"?o=`Matriz deve conter ${e.inclusive?"no m\xEDnimo":"maior que"} ${e.minimum} elemento(s)`:e.type==="string"?o=`Texto deve conter ${e.inclusive?"no m\xEDnimo":"mais que"} ${e.minimum} caractere(s)`:e.type==="number"?o=`N\xFAmero deve ser maior que ${e.inclusive?"ou igual a ":""}${e.minimum}`:o="Entrada Inv\xE1lida";break;case a.ZodIssueCode.too_big:e.type==="array"?o=`Matriz deve conter ${e.inclusive?"no m\xE1ximo":"menor que"} ${e.maximum} element(s)`:e.type==="string"?o=`Texto deve conter ${e.inclusive?"no m\xE1ximo":"abaixo de"} ${e.maximum} caractere(s)`:e.type==="number"?o=`N\xFAmero deve ser menor que ${e.inclusive?"ou igual a ":""}${e.maximum}`:o="Entrada Inv\xE1lida";break;case a.ZodIssueCode.custom:o="Entrada Inv\xE1lida";break;case a.ZodIssueCode.invalid_intersection_types:o="Interse\xE7\xE3o dos resultados n\xE3o pode ser combinada";break;case a.ZodIssueCode.not_multiple_of:o=`N\xFAmero deve ser m\xFAltiplo de ${e.multipleOf}`;break;default:o=r.defaultError,d(e)}return{message:o}};a.setErrorMap(i);var l=a;export{i as a,l as b};
//# sourceMappingURL=chunk-DJHTSNEU.js.map
